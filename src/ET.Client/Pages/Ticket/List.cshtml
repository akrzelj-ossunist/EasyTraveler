@page
@model ET.Client.Pages.Ticket.ListModel
@inject ET.Application.Utilities.AuthenticateUser AuthenticateUser
@{
	ViewData["Title"] = "List of Tickets";
	var previous = Model.TicketPageDto.Page == 0 ? "disabled" : "";
	var next = Model.TicketPageDto.Page + 1 == Model.TicketPageDto.TotalPages ? "disabled" : "";
	var noPages = Model.TicketPageDto.TotalPages == 0 ? "disabled" : "";
	var auth = AuthenticateUser.CreateAuthentication();
	var jwtToken = auth.JwtToken;
	var isAuthenticated = auth.IsAuthenticated;
	var role = auth.Role;
}

<h1>Filter Routes: </h1>

<form asp-page="/Ticket/List" method="get">
    <div class="mb-3">
        <label for="filterUser" class="form-label">User:</label>
        <input type="text" id="filterUser" name="user" class="form-control" value="@Request.Query["user"]" />
    </div>
    <div class="mb-3">
        <label for="filterStartLocation" class="form-label">Start Location:</label>
        <input type="text" id="filterStartLocation" name="startLocation" class="form-control" value="@Request.Query["startLocation"]" />
    </div>
    <div class="mb-3">
        <label for="filterEndLocation" class="form-label">End Location:</label>
        <input type="text" id="filterEndLocation" name="endLocation" class="form-control" value="@Request.Query["endLocation"]" />
    </div>
    <div class="mb-3">
        <label for="filterStartDate" class="form-label">Start Date:</label>
        <input type="date" id="filterStartDate" name="startDate" class="form-control" value="@Request.Query["startDate"]" />
    </div>
    <div class="mb-3">
        <label for="filterBoughtDate" class="form-label">Bought Date:</label>
        <input type="date" id="filterBoughtDate" name="boughtDate" class="form-control" value="@Request.Query["boughtDate"]" />
    </div>
    <div class="mb-3">
        <label for="filterPrice" class="form-label">Price:</label>
        <input type="number" id="filterPrice" name="price" class="form-control" value="@Request.Query["price"]" />
    </div>
    <div class="mb-3">
        <label for="filterStatus" class="form-label">Status:</label>
        <select id="filterStatus" name="status" class="form-control">
			<option value="">Pick Ticket Status</option>
            <option value="Expired">Expired</option>
            <option value="Valid">Valid</option>
            <option value="Canceled">Canceled</option>
        </select>
    </div>
    <div class="mb-3">
        <label for="filterSortBy" class="form-label">Sort By:</label>
        <select id="filterSortBy" name="sortBy" class="form-control">
            <option value="user">User</option>
            <option value="startLocation">Start Location</option>
            <option value="startDate">Start Date</option>
            <option value="boughtDate">Bought Date</option>
            <option value="price">Price</option>
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>



<h1>@ViewData["Title"]</h1>

@if (Model.Tickets != null && Model.Tickets.Count > 0)
{
	<table class="table table-striped">
		<thead>
			<tr>
				<th>Route</th>
				<th>Date</th>
				<th>Bought Date</th>
				<th>Price</th>
				<th>Status</th>
				<th>User</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var ticket in Model.Tickets)
			{
				<tr>
					<td>@ticket.Route.StartLocation - @ticket.Route.EndLocation</td>
					<td>@ticket.Route.StartDate - @ticket.Route.EndDate</td>
					<td>@ticket.BoughtDate.ToString("MM/dd/yyyy")</td>
					<td>@ticket.Price</td>
					<td>@ticket.Status</td>
					<td>@ticket.User.FirstName @ticket.User.LastName</td>
				</tr>
			}
		</tbody>
	</table>
}
else
{
	<p>No routes found.</p>
}


@* PAGINATION *@
@functions {
	IDictionary<string, string> GetRouteData(int num)
	{
		Dictionary<string, string> routeData = new Dictionary<string, string>();
		if (Model.TicketPageDto.SearchParams != null)
		{
			foreach (var param in Model.TicketPageDto.SearchParams)
			{
				routeData[param.Key] = param.Value;
			}
		}
		// Add pageIndex to the route data
		routeData["pageIndex"] = num.ToString();
		return routeData;
	}
}

<div>
	<ul class="pagination">
		<li class="page-item">
			<a asp-page="./List"
			   asp-route-pageIndex="@(Model.TicketPageDto.Page - 1)"
			   asp-all-route-data="GetRouteData(Model.TicketPageDto.Page - 1)"
			   class="page-link btn @previous"
			   role="button">
				Previous
			</a>
		</li>
		@for (var i = 0; i < Model.TicketPageDto.TotalPages; i++)
		{
			<li class="page-item @(i == Model.TicketPageDto.Page ? "active" : "")">
				<a asp-page="./List"
				   asp-route-pageIndex="@i"
				   asp-all-route-data="GetRouteData(i)"
				   class="page-link">
					@(i + 1)
				</a>
			</li>
		}
		<li class="page-item">
			<a asp-page="./List"
			   asp-route-pageIndex="@(Model.TicketPageDto.Page + 1)"
			   asp-all-route-data="GetRouteData(Model.TicketPageDto.Page + 1)"
			   class="page-link btn @next @noPages"
			   role="button">
				Next
			</a>
		</li>
	</ul>
</div>

